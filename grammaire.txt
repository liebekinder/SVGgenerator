Grammaire SVGgenerator

Vt = { 'drawing'; '['; ']'; 'x'; '{'; '}'; 'Point'; '('; ','; ')'; ';'; 'Line'; 'draw'; 'var'; 'number'; 'eof'; '+'; '-'; '/'; '*';}
Vn = {S; Bloc{; Instructions; Instr; Declaration; Draw; Function; Param; Exp_ar; Exp_ar2; Var}

S				-> Function.Drawing.'eof'
S				-> Drawing.'eof'
Function		-> 'function'.'var'.'('.Param.')'.Bloc{
Function		-> 'function'.'var'.'('.Param.')'.Bloc{.Function
Param			-> Param.','.Param
Param			-> 'Point'.'var'
Param			-> 'Line'.'var'
Drawing			-> 'drawing'.'var'.'['.'number' ',' 'number'.']'.Bloc{
Bloc{			-> '{'.Instructions.'}'
Instructions	-> Instr.Instructions
Instructions	-> Instr
Instr			-> Declaration
Instr			-> Draw
Instr			-> Fun
Declaration		-> 'Point'.'var'.'('.Exp_ar.','.Exp_ar.')'.';'
Declaration		-> 'Line'.'var'.'('.'var'.','.'var'.')'.';'
Draw			-> 'draw'.'var'.';'
Fun 			-> 'var'.'('.Var.')'.';'
Fun 			-> 'var'.'('.Exp_ar.')'.';'
Var				-> 'var'.','.Var
Var				-> 'var'
Exp_ar			-> Exp_ar2,Exp_ar
Exp_ar2			-> 'number'.'+'.'number'
Exp_ar2			-> 'number'.'*'.'number'
Exp_ar2			-> 'number'.'-'.'number'
Exp_ar2			-> 'number'.'/'.'number'
Exp_ar2			-> Exp_ar3
Exp_ar3			-> 'number'
Exp_ar3			-> 'var'